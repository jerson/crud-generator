package main

import (
	"fmt"
	_ "github.com/go-sql-driver/mysql"
	"github.com/facebookgo/grace/gracehttp"
	"github.com/kataras/iris"
	"github.com/iris-contrib/middleware/cors"
	"github.com/kataras/iris/middleware/recover"
    "{{ config.project.package }}/modules/context"
	"{{ config.project.package }}/modules/config"
	"{{ config.project.package }}/controllers"
)

func init() {
	err := config.ReadDefault()
	if err != nil {
		panic(err)
	}
}

func main() {

	ctx := context.NewSingle("api")
	defer ctx.Close()

	app := iris.New()
    app.Use(recover.New())
	app.Use(cors.Default())

	controllers.BaseController(app)
	{% for table in tables %}
        {% set tableName = table.name | upperCamelize %}
		controllers.{{ tableName }}Controller(app)
	{% endfor %}
	controllers.MetricsController(app)

	log := ctx.GetLogger("main")
	port := fmt.Sprintf(":%d", config.Vars.Server.Port)
	log.Infof("running %s",port)

	app.Build()
	err := gracehttp.Serve(
		&http.Server{Addr: port, Handler: app},
	)
	if err != nil {
		panic(err)
	}

}
